@model IEnumerable<Asian_Shoe.Models.PurchaseDetails>

@{
    ViewData["Title"] = "Index";
}

@{
    var userDictionary = ViewBag.User as Dictionary<int, string>; // Cast ViewBag.User to a dictionary
    var productDictionary = ViewBag.Product as Dictionary<int, string>; // Cast ViewBag.Product to a dictionary
}

<h1>Purchase Details</h1>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Purchase_Details_id)
            </th>
            <th>
               
                <label>Purchase Id</label>
            </th>
            <th>
                <label>User Id</label>
            </th>
            <th>
                <label>Product Id</label>
            </th>
            <th>
                <label>Status</label>
               
            </th>
            <th>
                <label>Total Bill</label>
            </th>
            <th>
                
                <label>Delivery Date</label>
            </th>
            <th>
                
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Purchase_Details_id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.purchase_id)
            </td>
            @* <td>
               @Html.DisplayFor(modelItem => item.user_id) 
   
            </td> *@ 
                <td>
                    @if (userDictionary != null && userDictionary.ContainsKey(item.user_id))
                    {
                        @userDictionary[item.user_id] <!-- Display the user name -->
                    }
                    else
                    {
                                <span>User not found</span>
                    }
                    </td>
            <td>
                    @if (productDictionary != null && productDictionary.ContainsKey(item.product_id))
                    {
                        @productDictionary[item.product_id] <!-- Display the product name -->
                    }
                    else
                    {
                        <span>Product not found</span>
                    }
            </td>
                <td>
                        @if (item.status_id == 1)
                        {
                        <input type="text" value="Shipped" readonly />
                        }
                        @if (item.status_id == 2)
                        {
                        <input type="text" value="Delivered" readonly />
                        }
                        @if (item.status_id == 3)
                        {
                        <input type="text" value="Order Cancel" readonly />
                        }
                </td>
            
            <td>
                @Html.DisplayFor(modelItem => item.TotalAmt)
            </td>
            <td>
                    @item.delivery_date?.ToString("dd-MM-yyyy")
            </td>
         
             <td>
                 @Html.ActionLink("Edit", "Edit", new {  id=item.Purchase_Details_id }) 
               @*  @Html.ActionLink("Details", "Details", new {  id=item.Purchase_Details_id })  *@
               @*  @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ }) *@
            </td> 
        </tr>
}
    </tbody>
</table>
